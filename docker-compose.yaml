version: "3.8"

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: devdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d devdb"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for event streaming and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Request Service
  request-service:
    build:
      context: ./services/request-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
      - POSTGRES_DB=devdb
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/request-service/app:/app/app
    restart: unless-stopped

  # Auth Service (placeholder - implement based on existing auth-service)
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
      - POSTGRES_DB=devdb
      - POSTGRES_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./services/auth-service/app:/app/app
    restart: unless-stopped

  # User Service (placeholder)
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
      - POSTGRES_DB=devdb
      - POSTGRES_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./services/user-service/app:/app/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge
