apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: ruralneighbour-dev
  labels:
    app: auth-service
    tier: backend
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
      version: v1
  template:
    metadata:
      labels:
        app: auth-service
        version: v1
    spec:
      containers:
        - name: auth-service
          image: 127.0.0.1:32000/ruralneighbour/auth-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            # Database configuration for PostgreSQL
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-password
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-port
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: auth-db
            - name: DATABASE_URL
              value: "postgresql://neighbor:password@rn-pg-rw:5432/auth_db"
            # Redis configuration for event publishing
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: redis-host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: redis-port
            - name: REDIS_URL
              value: "redis://:password@redis-service:6379"
            # Event streams configuration
            - name: USER_LIFECYCLE_STREAM
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: user-lifecycle-stream
            # JWT configuration - use secrets in production
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: jwt-secret-key
            - name: ALGORITHM
              value: "HS256"
            - name: ACCESS_TOKEN_EXPIRE_MINUTES
              value: "30"
            # Rate limiting
            - name: RATE_LIMIT_ENABLED
              value: "true"
            - name: RATE_LIMIT_REQUESTS
              value: "100"
            - name: RATE_LIMIT_WINDOW_SECONDS
              value: "60"
            # SendGrid email service configuration
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: sendgrid-secrets
                  key: api-key
            - name: FROM_EMAIL
              valueFrom:
                secretKeyRef:
                  name: sendgrid-secrets
                  key: from-email
            - name: FRONTEND_URL
              valueFrom:
                secretKeyRef:
                  name: sendgrid-secrets
                  key: frontend-url
            # SMTP fallback configuration (optional)
            - name: SMTP_SERVER
              value: "smtp.gmail.com"
            - name: SMTP_PORT
              value: "587"
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: username
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: password
            # Environment
            - name: ENVIRONMENT
              value: "production"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 10
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
