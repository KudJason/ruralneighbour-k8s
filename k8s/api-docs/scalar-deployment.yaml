apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-docs-scalar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-docs-scalar
  template:
    metadata:
      labels:
        app: api-docs-scalar
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: scalar-config
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: scalar-config
          configMap:
            name: scalar-config
            items:
              - key: index.html
                path: index.html
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scalar-config
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Rural Neighbour API Documentation</title>
        <script>
          (function(){
            var cdns = [
              'https://cdn.jsdelivr.net/npm/@scalar/api-reference@latest',
              'https://unpkg.com/@scalar/api-reference@latest',
              'https://cdn.skypack.dev/@scalar/api-reference'
            ];
            function loadFrom(i){
              if(i>=cdns.length){ return; }
              var s = document.createElement('script');
              s.src = cdns[i];
              s.onload = function(){ console.log('Scalar loaded from', cdns[i]); };
              s.onerror = function(){ console.warn('Scalar CDN failed:', cdns[i]); loadFrom(i+1); };
              document.head.appendChild(s);
            }
            loadFrom(0);
          })();
        </script>
        <style>
            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif; margin: 0; padding: 0; }
            #fallback-msg { padding: 12px 16px; background: #fff3cd; color: #8a6d3b; border-bottom: 1px solid #ffeeba; display: none; }
            .toolbar { display:flex; gap:8px; align-items:center; padding: 10px; border-bottom: 1px solid #eee; background:#fafafa; }
            select, button { padding: 6px 10px; }
            .section { border-top: 1px solid #eee; margin-top: 12px; padding-top: 12px; }
        </style>
    </head>
    <body>
        <div class="toolbar">
            <label for="spec-select">API:</label>
            <select id="spec-select">
                <option value="/openapi/auth.json">Auth</option>
                <option value="/openapi/users.json">Users</option>
                <option value="/openapi/requests.json">Requests</option>
                <option value="/openapi/investments.json">Investments</option>
                <option value="/openapi/content.json">Content</option>
                <option value="/openapi/safety.json">Safety</option>
                <option value="/openapi/locations.json">Locations</option>
                <option value="/openapi/notifications.json">Notifications</option>
                <option value="/openapi/payments.json">Payments</option>
                <option value="/openapi/rating.json">Rating</option>
            </select>
            <button id="reload-btn">Load</button>
            <button id="show-all-btn">Show All</button>
        </div>
        <div id="fallback-msg">Unable to load UI library from CDN. Please check network access to cdn.jsdelivr.net. OpenAPI JSON: <a href="/openapi/auth.json">/openapi/auth.json</a></div>
        <div id="scalar-api-reference"></div>
        <script>
            // Wait for Scalar to load
            window.addEventListener('load', function() {
                const element = document.getElementById('scalar-api-reference');
                const fallback = document.getElementById('fallback-msg');
                const select = document.getElementById('spec-select');
                const reloadBtn = document.getElementById('reload-btn');
                const showAllBtn = document.getElementById('show-all-btn');
                const specs = [
                    { name: 'Auth', url: '/openapi/auth.json' },
                    { name: 'Users', url: '/openapi/users.json' },
                    { name: 'Requests', url: '/openapi/requests.json' },
                    { name: 'Investments', url: '/openapi/investments.json' },
                    { name: 'Content', url: '/openapi/content.json' },
                    { name: 'Safety', url: '/openapi/safety.json' },
                    { name: 'Locations', url: '/openapi/locations.json' },
                    { name: 'Notifications', url: '/openapi/notifications.json' },
                    { name: 'Payments', url: '/openapi/payments.json' },
                    { name: 'Rating', url: '/openapi/rating.json' }
                ];
                if (element) {
                    try {
                        function loadSpec(url) {
                            element.setAttribute('data-configuration', JSON.stringify({
                                spec: { url: url },
                                theme: 'purple',
                                layout: 'modern'
                            }));
                        }
                        loadSpec(select.value);
                        reloadBtn.addEventListener('click', function() { loadSpec(select.value); });
                        showAllBtn.addEventListener('click', function() {
                            // Render multiple components stacked
                            element.innerHTML = '';
                            specs.forEach(function(s) {
                                const section = document.createElement('div');
                                section.className = 'section';
                                const title = document.createElement('h2');
                                title.textContent = s.name;
                                section.appendChild(title);
                                const holder = document.createElement('div');
                                section.appendChild(holder);
                                element.appendChild(section);
                                const comp = document.createElement('scalar-api-reference');
                                comp.setAttribute('data-configuration', JSON.stringify({
                                    spec: { url: s.url },
                                    theme: 'purple',
                                    layout: 'modern'
                                }));
                                holder.appendChild(comp);
                            });
                        });
                    } catch (e) {
                        // ignore
                    }

                    // If the custom element is not registered (CDN blocked), show fallback
                    setTimeout(function() {
                        if (!window.customElements || !window.customElements.get('scalar-api-reference')) {
                            if (fallback) { fallback.style.display = 'block'; }
                        }
                    }, 1500);
                }
            });
        </script>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: api-docs-scalar
spec:
  selector:
    app: api-docs-scalar
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
