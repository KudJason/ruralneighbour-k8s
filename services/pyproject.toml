[project]
name = "services"
version = "0.1.0"
description = ""
authors = [
    {name = "KudJason", email = "jason.jia87@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.116.1,<0.117.0",
    "uvicorn>=0.22.0",
    "sqlalchemy>=2.0.20",
    "psycopg2-binary>=2.9.7",
    "python-dotenv>=1.0.0",
    "redis>=5.0.1",
    "alembic>=1.13.1",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "passlib[bcrypt]>=1.7.4",
    "httpx>=0.25.2",
    "email-validator>=2.0.0"
]

package-mode = false

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.auth_service.dependencies]
python-jose = "^3.3.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
toml = "^0.10.2"
pytest-asyncio = "^0.23.6"
poethepoet = "^0.36.0"
psutil = "^5.9.0"

[tool.poetry.group.user_service.dependencies]
python-multipart = "^0.0.6"

[tool.poetry.group.payment_service.dependencies]
stripe = "^8.10.0"
paypalrestsdk = "^1.13.1"

[tool.poetry.group.location_service.dependencies]
numpy = "<2.0.0"
geoalchemy2 = "^0.14.2"
shapely = "^2.0.2"

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')"
]
testpaths = [
    "auth-service/tests",
    "user-service/tests",
    "content-service/tests",
    "location-service/tests",
    "notification-service/tests",
    "payment-service/tests",
    "request-service/tests",
    "safety-service/tests"
]

[tool.poe.tasks]
test = "pytest"
test-auth = { shell = "cd auth-service && PYTHONPATH=. pytest" }
test-user = { shell = "cd user-service && PYTHONPATH=. pytest" }
test-content = { shell = "cd content-service && PYTHONPATH=. pytest" }
test-location = { shell = "cd location-service && PYTHONPATH=. pytest" }
test-location-integration = { shell = "cd location-service && PYTHONPATH=. pytest -m integration" }
test-notification = { shell = "cd notification-service && PYTHONPATH=. pytest" }
test-payment = { shell = "cd payment-service && PYTHONPATH=. pytest" }
test-request = { shell = "cd request-service && PYTHONPATH=. pytest" }
test-safety = { shell = "cd safety-service && PYTHONPATH=. pytest" }
test-all = ["test-auth", "test-user", "test-content", "test-location", "test-notification", "test-payment", "test-request", "test-safety"]
export-requirement = "./export_requirements.bash"
